<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction :: CIS 526 Textbook</title><link>https://textbooks.cs.ksu.edu/cis526/03-asynchronous-js/01-introduction/</link><description>JavaScript makes extensive use of asynchronous processing to tackle the challenge of concurrency. This includes the events weâ€™ve already talked about (user events, network events and timers), but it has also been expanded to provide even more powerful features. The XMLHTTPRequest object allows JavaScript to request additional resources directly in an asynchronous manner, and the more recent Fetch API updates that approach. Web workers allow parallel JavaScript processes to be run in the browser.</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="https://textbooks.cs.ksu.edu/cis526/03-asynchronous-js/01-introduction/index.xml" rel="self" type="application/rss+xml"/></channel></rss>