<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Update :: CIS 526 Textbook</title><link>https://textbooks.cs.ksu.edu/cis526/x-examples/03-rest-api/10-update/</link><description>Update Route Next, letâ€™s look at adding an additional route in our application that allows us to update a User model. This route is very similar to the route used to create a user, but there are a few key differences as well.
// -=-=- other code omitted here -=-=- /** * Update a user * * @param {Object} req - Express request object * @param {Object} res - Express response object * @param {Function} next - Express next middleware function * * @swagger * /api/v1/users/{id}: * put: * summary: update user * tags: [users] * parameters: * - in: path * name: id * required: true * schema: * type: integer * description: user ID * requestBody: * description: user * required: true * content: * application/json: * schema: * $ref: '#/components/schemas/User' * example: * username: updateduser * roles: * - id: 6 * - id: 7 * responses: * 201: * $ref: '#/components/responses/Success' * 422: * $ref: '#/components/responses/ValidationError' */ router.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis526/x-examples/03-rest-api/10-update/index.xml" rel="self" type="application/rss+xml"/></channel></rss>