<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Express Starter Project :: CIS 526 Textbook</title><link>https://textbooks.cs.ksu.edu/cis526/x-examples/01-express-starter/</link><description>This example project is the first in a series toward building a complete full-stack web application using Node.js and Express to create a RESTful API on the backend that connects to a database, and then a Vue single page application on the frontend.
In doing so, we’ll explore some of the standard ways web developers use existing tools, frameworks, and libraries to perform many of the operations we’ve learned how to do manually throughout this course.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis526/x-examples/01-express-starter/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub CodeSpace</title><link>https://textbooks.cs.ksu.edu/cis526/x-examples/01-express-starter/01-codespace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/cis526/x-examples/01-express-starter/01-codespace/</guid><description>YouTube Video Creating a Codespace To begin, we will start with an empty GitHub repository. You can either create one yourself, or you may be working from a repository provided through GitHub Classroom.
At the top of the page, you may see either a Create a Codespace button in an empty repository, or a Code button that opens a panel with a Codespaces tab and a Create Codespace on main button in an initialized repository.</description></item></channel></rss>