<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bypass Auth :: CIS 526 Textbook</title><link>https://textbooks.cs.ksu.edu/cis526/x-examples/04-authentication/01-bypass/</link><description>Authentication Libraries There are many different authentication libraries and methods available for Node.js and Express. For this project, we will use the Passport.js library. It supports many different authentication strategy, and is a very common way that authentication is handled within JavaScript applications.
For our application, we’ll end up using several strategies to authenticate our users:
Unique Token - used to bypass authentication for testing CAS - used to authenticate with Central Authentication Service (CAS) servers such as those used at K-State JSON Web Tokens (JWT) - used to identify user requests to the API itself Let’s first set up our unique token strategy, which allows us to test our authentication routes before setting up anything else.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis526/x-examples/04-authentication/01-bypass/index.xml" rel="self" type="application/rss+xml"/></channel></rss>