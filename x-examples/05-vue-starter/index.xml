<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vue.js Starter Project :: CIS 526 Textbook</title><link>https://textbooks.cs.ksu.edu/cis526/x-examples/05-vue-starter/</link><description>This example project builds on the previous RESTful API project by scaffolding a frontend application using Vue.js. This will become the basis for a full frontend for the application over the next few projects.
Project Deliverables At the end of this example, we will have a project with the following features:
Prior Work This project picks up right where the last one left off, so if you haven’t completed that one yet, go back and do that before starting this one.</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/cis526/x-examples/05-vue-starter/index.xml" rel="self" type="application/rss+xml"/><item><title>Vue Starter</title><link>https://textbooks.cs.ksu.edu/cis526/x-examples/05-vue-starter/01-vue-starter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/cis526/x-examples/05-vue-starter/01-vue-starter/</guid><description>Vue Starter Now that we’ve built a solid backend for our application through our RESTful API, we can now start on building the frontend application that our users will actually interface with. There are many techniques and tools for writing frontend applications that we’ve covered in this course, but for this project we’re going to introduce once more, called Vue. Vue is very similar to React, but uses a more streamlined syntax and structure.</description></item><item><title>Exploring Vue</title><link>https://textbooks.cs.ksu.edu/cis526/x-examples/05-vue-starter/02-exploring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/cis526/x-examples/05-vue-starter/02-exploring/</guid><description>Install the Vue Extension First, in our Visual Studio Code instance, we will want to install the Vue - Official extension. Make sure it is the correct, official plugin, since there are many that share a similar name in the VS Code extension marketplace:
As always, you can click the gear next to the install button to add it to the devcontainer.json file, so it will be installed in future devcontainers built using this repository.</description></item><item><title>PrimeVue</title><link>https://textbooks.cs.ksu.edu/cis526/x-examples/05-vue-starter/03-primevue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/cis526/x-examples/05-vue-starter/03-primevue/</guid><description>Install PrimeVue One of the first things we may want to install in our application is a library of ready-to-use components that we can use to build our application with. This can drastically cut down on the time it takes to build an application, and these libraries often come with a range of features that make our applications both user-friendly and very accessible.
While there are many different libraries to choose from, we’ll use the PrimeVue library.</description></item></channel></rss>